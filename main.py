from telebot import types
import Constants
from Constants import *
from Constants import bot
from User import User


@bot.message_handler(commands=['start'])
def welcome(message: types.Message, to_print: bool = True, start: bool = True):
    if start:
        welcome_text_message(message.chat.id)
    if type(checkUser(message.from_user, message.chat.id)) == bool:
        to_print = False
    keyboard = make_menu_keyboard()
    if to_print:
        bot.send_message(message.chat.id, text=MENU_TEXT, reply_markup=keyboard)
    else:
        return keyboard


def welcome_by_chat_id(chat_id: int):
    keyboard = make_menu_keyboard()
    bot.send_message(chat_id, text=MENU_TEXT, reply_markup=keyboard)


def make_menu_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    callback_button_cul = types.InlineKeyboardButton(text="–ê—Ä—Ö–∏–≤ üìö", callback_data=CULTURE_BTN)
    callback_button_mus = types.InlineKeyboardButton(text="–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –ø–ª–µ–π–ª–∏—Å—Ç üé∂", callback_data=MUSIC_BTN)
    callback_button_aes = types.InlineKeyboardButton(text="–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç –ê–≠–° ‚ú®", callback_data=AEC_BTN)
    callback_button_quiz = types.InlineKeyboardButton(text="–ö–≤–∏–∑—ã ü§´", callback_data=QUIZ_BTN)
    keyboard.add(callback_button_cul)
    keyboard.add(callback_button_mus)
    keyboard.add(callback_button_aes)
    keyboard.add(callback_button_quiz)
    return keyboard


def show_epoches_keyboard():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    callback_button_1 = types.InlineKeyboardButton(text=Constants.FIRST_NAME,
                                                   url="https://telegra.ph/YAzycheskaya-Rus-12-18")
    callback_button_2 = types.InlineKeyboardButton(text=Constants.SECOND_NAME,
                                                   url="https://telegra.ph/Posle-kreshcheniya-12-18-2")
    callback_button_3 = types.InlineKeyboardButton(text=Constants.THIRD_NAME,
                                                   url="https://telegra.ph/Smutnoe-vremya-12-18")
    callback_button_4 = types.InlineKeyboardButton(text=Constants.FOURTH_NAME,
                                                   url="https://telegra.ph/EHpoha-Petra-I-12-18-2")
    callback_button_5 = types.InlineKeyboardButton(text=Constants.FIFTH_NAME,
                                                   url="https://telegra.ph/Sovetskoe-vremya-12-18")
    callback_button_6 = types.InlineKeyboardButton(text=Constants.SIXTH_NAME,
                                                   url="https://telegra.ph/Nashe-vremya-12-18")
    callback_button_7 = types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∞—Ä—Ö–∏–≤—É", callback_data=BACK_TO_CULTURE_BTN)
    keyboard.add(callback_button_1, callback_button_2)
    keyboard.add(callback_button_3, callback_button_4)
    keyboard.add(callback_button_5, callback_button_6)
    keyboard.add(callback_button_7)
    return keyboard


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call: types.CallbackQuery):
    user = checkUser(call.from_user)
    if call.message:
        # sendDataToMe(call.data + "\n" + user.toString(), False)
        if call.data == MUSIC_BTN:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            show_music_posts(call.message, user)
        if call.data == NEXT_MUS_BTN:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=call.message.text,
                                  reply_markup=edit_music_keyboard(MUSIC_DICT[call.message.text].yandex_link))
            user.increase_music_post_cnt()
            show_music_posts(call.message, user)
        if call.data == PREV_MUS_BTN:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=call.message.text,
                                  reply_markup=edit_music_keyboard(MUSIC_DICT[call.message.text].yandex_link))
            user.decrease_music_post_cnt()
            show_music_posts(call.message, user)
        if call.data == AEC_BTN:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            show_aes_posts(call.message, user)

        if call.data == NEXT_AES_BTN:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open(AES_DICT[call.message.caption].picture, "rb"),
                                                               caption=call.message.caption))
            user.increase_aes_post_cnt()
            show_aes_posts(call.message, user)

        if call.data == PREV_AES_BTN:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open(AES_DICT[call.message.caption].picture, "rb"),
                                                               caption=call.message.caption))
            user.decrease_aes_post_cnt()
            show_aes_posts(call.message, user)

        if call.data == CULTURE_BTN:
            new_text, new_keyboard = show_culture_posts(user)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text,
                                  reply_markup=new_keyboard)
        if call.data == NEXT_CULT_BTN:
            user.increase_culture_post_cnt()
            new_text, new_keyboard = show_culture_posts(user)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text,
                                  reply_markup=new_keyboard)
            show_culture_posts(user)
        if call.data == PREV_CULT_BTN:
            user.decrease_culture_post_cnt()
            new_text, new_keyboard = show_culture_posts(user)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text,
                                  reply_markup=new_keyboard)
        if call.data == MAIN_MENU_BTN:
            if call.message.text in MUSIC_DICT:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=call.message.text,
                                      reply_markup=edit_music_keyboard(MUSIC_DICT[call.message.text].yandex_link))
                welcome(call.message, True, False)
            elif call.message.caption and call.message.caption in AES_DICT:
                bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                       media=types.InputMediaPhoto(open(AES_DICT[call.message.caption].picture, "rb"),
                                                                   caption=call.message.caption))
                welcome(call.message, True, False)
            else:
                new_keyboard = welcome(call.message, False, False)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text=MENU_TEXT,
                                      reply_markup=new_keyboard)
        if call.data == "–û–∫—É–Ω—É—Ç—å—Å—è –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —ç–ø–æ—Ö—É",
                                  reply_markup=show_epoches_keyboard())
        if call.data == BACK_TO_CULTURE_BTN:
            new_text, new_keyboard = show_culture_posts(user)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text,
                                  reply_markup=new_keyboard)
        if call.data == "day 2":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_2.png", "rb"),
                                                               caption="–î–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –≤—Å–µ–≥–æ 2 –¥–Ω—è!\n–ê –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –ø–∏—Å—å–º–æ –î–µ–¥—É –ú–æ—Ä–æ–∑—É? üíå"))
            welcome(call.message, True, False)

        if call.data == "back to menu from info quiz post":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/first_quiz.png", "rb"),
                                                               caption="–ù–æ–≤—ã–π –≥–æ–¥ –Ω–∞—Å—Ç—É–ø–∏–ª, –Ω–æ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –¥–ª—è –≤–∞—Å üéâ\n\n<i><b>¬´–ö–≤–∏–∑—ã¬ª</b></i> - c–∞–º—ã–π –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª - –Ω–∞–∫–æ–Ω–µ—Ü —Å—Ç–∞–ª –∞–∫—Ç–∏–≤–µ–Ω!\n\n–ù–∞ –∫–∞–∫—É—é –∂–µ —Ç–µ–º—É –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –ø–µ—Ä–≤—ã–π –∫–≤–∏–∑? ü§´",
                                                               parse_mode="HTML"))
            welcome(call.message, True, False)
    # QUIZ
    if call.data == QUIZ_BTN:
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–í—ã–±–µ—Ä–∏ –∫–≤–∏–∑",
                              reply_markup=make_keyboard_for_quiz())

    if call.data in NEW_YEAR_Q_QUESTION_CALLBACKS:
        if call.data == NEW_YEAR_Q_BTN:
            user.add_new_year_quiz(call.message.message_id)
        cur_quiz = user.get_new_year_quiz(call.message)
        next_question = NEW_YEAR_Q_QUESTION_CALLBACKS[call.data]
        if call.data in NEW_YEAR_Q_QUESTION_RIGHT:
            cur_quiz.score[next_question - 1] = 1
        if next_question == 13:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_photo(call.message.chat.id, photo=open(get_new_year_quiz_result(sum(cur_quiz.score)), "rb"))

            user.delete_new_year_quiz(call.message.message_id)
            welcome(call.message, True, False)
        else:
            question_text, keyboard = get_quiz_data(next_question, sum(cur_quiz.score))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=question_text, parse_mode="HTML",
                                  reply_markup=keyboard)

    if call.data == CHARACTER_QUIZ_NAME:
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=CHARACTER_QUIZ_START_MESSAGE,
                              reply_markup=make_keyboard_for_starting_character_quiz())

    if call.data == START_CHARACTER_QUIZ:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg_id = edit_or_send_character_quiz_question(user, call.message, 1)
        user.add_character_quiz(msg_id)

    if call.data in CHARACTER_QUIZ_QUESTION_CALLBACKS:
        try:
            cur_question_num = user.update_character_quiz_score(call.message,
                                                                CHARACTER_QUIZ_QUESTION_CALLBACKS.index(call.data) + 1)
            edit_or_send_character_quiz_question(user, call.message, cur_question_num + 1)
        except FileNotFoundError:
            bot.send_message(call.message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã(\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /start –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

    if call.data in REVERSER_CHARACTER_LIST:
        bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                               media=types.InputMediaPhoto(open(
                                   f"media/CharacterQuizPics/res-{REVERSER_CHARACTER_LIST[call.data][0]}.png", "rb")),
                               reply_markup=make_keyboard_for_ending_character_quiz(REVERSER_CHARACTER_LIST[call.data][1], REVERSER_CHARACTER_LIST[call.data][2]))
        user.delete_character_quiz(call.message.message_id)
        welcome(call.message, True, False)

    if call.data == BACK_TO_MENU_FROM_POST:
        # bot.send_message(MY_ID, call.message.caption)
        if call.message.caption == "–î–æ —à—É—Ç–æ–∫ –ø—Ä–æ –ø—Ä–æ—à–ª–æ–≥–æ–¥–Ω–∏–π —Ö–ª–µ–± –≤—Å–µ–≥–æ 6 –¥–Ω–µ–π!\n\n–ö—Å—Ç–∞—Ç–∏ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –¥–æ–±–∞–≤–∏–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç –ê–≠–° üî•":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_6.png", "rb"),
                                                               caption="–î–æ —à—É—Ç–æ–∫ –ø—Ä–æ –ø—Ä–æ—à–ª–æ–≥–æ–¥–Ω–∏–π —Ö–ª–µ–± –≤—Å–µ–≥–æ 6 –¥–Ω–µ–π!\n\n–ö—Å—Ç–∞—Ç–∏, —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –¥–æ–±–∞–≤–∏–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç –ê–≠–° üî•"))

        elif call.message.caption.split()[0] == "\"–ê–∫–∞–¥–µ–º–∏–∫":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/aes_photos/aes_10.jpg", "rb"),
                                                               caption="\"–ê–∫–∞–¥–µ–º–∏–∫ –õ–æ–º–æ–Ω–æ—Å–æ–≤\" ‚Äî –ø–µ—Ä–≤–∞—è –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–ª–∞–≤—É—á–∞—è –ê–≠–°. –°–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ—Ä–æ–¥–µ –ü–µ–≤–µ–∫ –Ω–∞ –ß—É–∫–æ—Ç–∫–µ –∏ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–æ–π —Å–µ–≤–µ—Ä–Ω–æ–π –ê–≠–° –º–∏—Ä–∞!",
                                                               parse_mode="HTML"))
        elif call.message.caption.split()[0] == "–û—Å—Ç–∞–µ—Ç—Å—è":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_5.png", "rb"),
                                                               caption="–û—Å—Ç–∞–µ—Ç—Å—è –≤—Å–µ–≥–æ 5 –¥–Ω–µ–π –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞!\n–£–∂–µ "
                                                                       "–ø—Ä–∏–¥—É–º–∞–ª–∏, —á—Ç–æ –∑–∞–≥–∞–¥–∞–µ—Ç–µ? üéâ"))
        elif call.message.caption.split()[0] == "–î–æ":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_4.png", "rb"),
                                                               caption="–î–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ 4 –¥–Ω—è! –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –ø–æ–¥–∞—Ä–∫–∏ —Ä–æ–¥–Ω—ã–º? üéÅ"))
        elif call.message.caption.split()[0] == "–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/bear_and_queen.jpg", "rb"),
                                                               caption="–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ –º–µ–¥–≤–µ–∂–æ–Ω–∫–µ, –∫–æ—Ç–æ—Ä–æ–º—É —É–¥–∞–ª–æ—Å—å –≤—ã–ø–∏—Ç—å —á–∞—é —Å –∫–æ—Ä–æ–ª–µ–≤–æ–π –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏ üêª"))
        elif call.message.caption.split()[0] == "–ù–æ–≤—ã–π":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_3.png", "rb"),
                                                               caption="–ù–æ–≤—ã–π –≥–æ–¥ —É–∂–µ —á–µ—Ä–µ–∑ 3 –¥–Ω—è ‚ú®"))
        elif "–û–ª—å–≥–∞ –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∞—è –∏ –í–ò–ê ¬´–î–æ–±—Ä—ã –º–æ–ª–æ–¥—Ü—ã¬ª ‚Äì –ü–µ—Å–µ–Ω–∫–∞ –æ —Å–Ω–µ–∂–∏–Ω–∫–µ" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/snowflake.jpg", "rb"),
                                                               caption="–í –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–æ–≤–∏–Ω–∫–∞: <i><b>–û–ª—å–≥–∞ –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∞—è –∏ –í–ò–ê ¬´–î–æ–±—Ä—ã –º–æ–ª–æ–¥—Ü—ã¬ª ‚Äì –ü–µ—Å–µ–Ω–∫–∞ –æ —Å–Ω–µ–∂–∏–Ω–∫–µ</b></i> –∏–∑ —Ñ–∏–ª—å–º–∞ ¬´–ß–∞—Ä–æ–¥–µ–∏¬ª.\n\n–ü–µ—Å–Ω—è –º–æ–≥–ª–∞ –≤–æ–≤—Å–µ –Ω–µ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —Ñ–∏–ª—å–º–µ, –æ —á—ë–º —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –≤–Ω–∏–∑—É –≤ –º–∏–Ω–∏-—Å—Ç–∞—Ç—å–µ.\n\n–ö–∞–∫ –≤—Å–µ–≥–¥–∞, –¥–æ–±–∞–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –ø–µ—Å–Ω—é –≤ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –ø–ª–µ–π–ª–∏—Å—Ç ;)",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º —Ç—É—Ç",
                                                                                "https://telegra.ph/Olga-Rozhdestvenskaya-i-VIA-Dobry-molodcy--Pesenka-o-snezhinke-01-04"))
        elif "–¢–∞–Ω–µ—Ü –§–µ–∏ –î—Ä–∞–∂–µ –∏–∑ –±–∞–ª–µ—Ç–∞ ¬´–©–µ–ª–∫—É–Ω—á–∏–∫¬ª" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/balet.jpg", "rb"),
                                                               caption="–í –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–æ–≤–∏–Ω–∫–∞: <i><b>–ü—ë—Ç—Ä –ò–ª—å–∏—á –ß–∞–π–∫–æ–≤—Å–∫–∏–π ‚Äî –¢–∞–Ω–µ—Ü –§–µ–∏ –î—Ä–∞–∂–µ –∏–∑ –±–∞–ª–µ—Ç–∞ ¬´–©–µ–ª–∫—É–Ω—á–∏–∫¬ª</b></i>\n\n–ß–∞–π–∫–æ–≤—Å–∫–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –¥–ª—è —ç—Ç–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –¥–æ–≤–æ–ª—å–Ω–æ –Ω–µ–æ–±—ã—á–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –ö–∞–∫–æ–π –∂–µ? –£–∑–Ω–∞–µ—Ç–µ –≤ –º–∏–Ω–∏-—Å—Ç–∞—Ç—å–µ!",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ß–∏—Ç–∞—Ç—å –º–∏–Ω–∏-—Å—Ç–∞—Ç—å—é üìÉ",
                                                                                "https://telegra.ph/Pyotr-Ilich-CHajkovskij--Tanec-Fei-Drazhe-iz-baleta-SHCHelkunchik-01-07"))
        elif "Queen ‚Äî Thank God It's Christmas" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/queen.jpg", "rb"),
                                                               caption="–í –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–æ–≤–∏–Ω–∫–∞: <i><b>Queen ‚Äî Thank God It's Christmas</b></i>.\n\n–û –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –¥–ª—è –º–Ω–æ–≥–∏—Ö –ø–µ—Å–Ω–µ —Ä–æ–∫-–≥—Ä—É–ø–ø—ã Queen –≤ –º–∏–Ω–∏-—Å—Ç–∞—Ç—å–µ üé∏",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ü—Ä–æ –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π —Å–∏–Ω–≥–ª",
                                                                                "https://telegra.ph/Queen---Thank-God-Its-Christmas-01-10"))
        elif "–í 2022 –≥–æ–¥—É –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 130 –ª–µ—Ç" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/big_ballet.jpg", "rb"),
                                                               caption="–í 2022 –≥–æ–¥—É –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 130 –ª–µ—Ç, –ø–æ–∂–∞–ª—É–π, —Å–∞–º–æ–º—É –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º—É –∏ –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –±–∞–ª–µ—Ç—É –≤ –º–∏—Ä–µ ‚Äî ¬´–©–µ–ª–∫—É–Ω—á–∏–∫—É¬ª –ü–µ—Ç—Ä–∞ –ò–ª—å–∏—á–∞ –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ. –í —á–µ—Å—Ç—å —é–±–∏–ª–µ—è –∫—Ä–∞—Ç–∫–æ –≤—Å–ø–æ–º–∏–Ω–∞–µ–º –æ —Ç–æ–º, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –±–∞–ª–µ—Ç. –ò –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è –∫ –∫–ª–∞—Å—Å–∏–∫–µ, –≤–ø–µ—Ä–≤—ã–µ –∏–ª–∏ –≤–Ω–æ–≤—å.",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–°–∞–º—ã–π –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–π –±–∞–ª–µ—Ç –≤ –º–∏—Ä–µ ü©∞",
                                                                                "https://telegra.ph/Baletu-SHCHelkunchik--130-let-01-11"))
        elif "–í –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å —Å–µ–º—å—ë–π" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/family.jpg", "rb"),
                                                               caption="–í –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å —Å–µ–º—å—ë–π. –ò —á—Ç–æ–±—ã —ç—Ç–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–¥–∏–ª–æ —Å –ø–æ–ª—å–∑–æ–π, –±–∏–∑–Ω–µ—Å-—Å—Ç–æ—Ä–∏—Ç–µ–ª–ª–µ—Ä –ê—Ä—Ç–µ–º –ú—É—à–∏–Ω-–ú–∞–∫–µ–¥–æ–Ω—Å–∫–∏–π –ø–æ–¥–µ–ª–∏–ª—Å—è —Å –Ω–∞–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–µ —Å—Ç–∞–Ω–µ—Ç–µ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π –∏ —Å–µ–º—å—ë–π üë®‚Äçüë©‚Äçüëß",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ü–æ–≤–æ–¥—ã –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π –∏ —Å–µ–º—å—ë–π",
                                                                                "https://telegra.ph/9-voprosov-dlya-semejnoj-posidelki-01-11"))
        elif call.message.caption.split()[0] == "–í":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/prostokvashino.jpg", "rb"),
                                                               caption="–í –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–æ–≤–∏–Ω–∫–∞: <i><b>–í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –¢–æ–ª–∫—É–Ω–æ–≤–∞ - –ö–∞–±—ã –Ω–µ –±—ã–ª–æ –∑–∏–º—ã</b></i> –∏–∑ –º—É–ª—å—Ç–∏–∫–∞ –ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∏–Ω–æ.\n–ê –Ω–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å, –Ω–∞–¥ —á–µ–º –µ—â—ë —Ä–∞–±–æ—Ç–∞–ª–∏ –∞–≤—Ç–æ—Ä—ã –ø–µ—Å–Ω–∏ ‚ùÑ",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–û–± –∞–≤—Ç–æ—Ä–∞—Ö –ø–µ—Å–Ω–∏",
                                                                                "https://telegra.ph/Valentina-Tolkunova---Kaby-ne-bylo-zimy-12-29"))
        elif call.message.caption.split()[0] == "–î–æ–±–∞–≤–∏–ª–∏" and call.message.caption.split()[1] == "–Ω–æ–≤–∏–Ω–∫—É":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/TOP.jpg", "rb"),
                                                               caption="–î–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–∏–Ω–∫—É –≤ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –ø–ª–µ–π–ª–∏—Å—Ç: <i><b>twenty one pilots ‚Äî Christmas Saves the Year</b></i>\n\n–û—Ç –ª–∏—Ü–∞ –∫–æ–≥–æ –≤–µ–¥—ë—Ç—Å—è –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω–µ? –£–∑–Ω–∞–µ—Ç–µ –≤ –º–∏–Ω–∏-—Å—Ç–∞—Ç—å–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤–Ω–∏–∑—É",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("—Ç—ã–∫",
                                                                                "https://telegra.ph/twenty-one-pilots--Christmas-Saves-the-Year-01-05-2"))

        elif call.message.caption.split()[0] == "–î–æ–±–∞–≤–∏–ª–∏":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/aes_photos/welcome_aes_pic.jpg", "rb"),
                                                               caption=WELCOME_AES_TEXT, parse_mode="HTML"))

        elif call.message.caption.split()[0] == "–ù–æ–≤–∏–Ω–∫–∞":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/wonderful_dreams.jpg", "rb"),
                                                               caption="–ù–æ–≤–∏–Ω–∫–∞ –≤ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ: <b><i>Melanie Thornton - Wonderful dream (Holidays are coming)</i></b> üéÑ\n\n–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ–± –æ—Ä–∏–≥–∏–Ω–∞–ª–µ, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–∫–æ–º—ã –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–µ—Å–Ω–∏ –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏—è!",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–û –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º —Ö–∏—Ç–µ",
                                                                                "https://telegra.ph/Melanie-Thornton---Wonderful-dream-Holidays-are-coming-12-29"))
        elif call.message.caption.split()[0] == "–û—Å—Ç–∞–ª—Å—è":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/days/day_1.png", "rb"),
                                                               caption="–û—Å—Ç–∞–ª—Å—è –≤—Å–µ–≥–æ 1 –¥–µ–Ω—å –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞!"))
        elif call.message.caption.split()[0] == "–ù–µ":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/kuranty.png", "rb"),
                                                               caption="–ù–µ —É–ø—É—Å—Ç–∏ –∑–∞–≤–µ—Ç–Ω—É—é –º–∏–Ω—É—Ç—É ‚ù§‚ú®"))
        elif call.message.caption.split()[0] == "–í—Å–µ–≥–¥–∞":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/moscow.jpg", "rb"),
                                                               caption="–í—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –ø–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π –ú–æ—Å–∫–≤–µ, –Ω–æ –Ω–∏–∫–∞–∫ –Ω–µ –ø–æ–ª—É—á–∞–ª–æ—Å—å? –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—É–ª–∫—É –¥–ª—è –≤–∞—Å! –ü—Ä–∞–≤–¥–∞, —Å –Ω–µ–±–æ–ª—å—à–∏–º —Å—é—Ä–ø—Ä–∏–∑–æ–º ‚Äî –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ <b>—Å—Ç–æ–ª–µ—Ç–Ω–µ–π –¥–∞–≤–Ω–æ—Å—Ç–∏</b>!",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–í–ø–µ—Ä–µ–¥ –≤ –ø—Ä–æ—à–ª–æ–µ üöÇ",
                                                                                "https://telegra.ph/Kak-starinnaya-Moskva-vstrechala-Novyj-god-12-29"))
        elif call.message.caption == "–£ –º–Ω–æ–≥–∏—Ö –ª—é–¥–µ–π –µ—Å—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏—è –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –≥–æ–¥–∞. –ö—Ç–æ-—Ç–æ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç —Å–∞–º—ã–µ —Ç—ë–ø–ª—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∫—Ç–æ-—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –≥–æ–¥, –∞ –∫—Ç–æ-—Ç–æ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç –≤—Å–µ—Ö –≤—Å—Ç—Ä–µ—á–µ–Ω–Ω—ã—Ö –∑–∞ –≥–æ–¥ –ª—é–¥–µ–π.  –ù–æ –∏ —É –≥–∏–≥–∞–Ω—Ç—Å–∫–∏—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π —Ç–æ–∂–µ –µ—Å—Ç—å —Å–≤–æ–π —Å–ø–æ—Å–æ–± –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –≥–æ–¥–∞ üóì":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/google.jpg", "rb"),
                                                               caption="–£ –º–Ω–æ–≥–∏—Ö –ª—é–¥–µ–π –µ—Å—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏—è –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –≥–æ–¥–∞. –ö—Ç–æ-—Ç–æ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç —Å–∞–º—ã–µ —Ç—ë–ø–ª—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∫—Ç–æ-—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –≥–æ–¥, –∞ –∫—Ç–æ-—Ç–æ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç –≤—Å–µ—Ö –≤—Å—Ç—Ä–µ—á–µ–Ω–Ω—ã—Ö –∑–∞ –≥–æ–¥ –ª—é–¥–µ–π.  –ù–æ –∏ —É –≥–∏–≥–∞–Ω—Ç—Å–∫–∏—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π —Ç–æ–∂–µ –µ—Å—Ç—å —Å–≤–æ–π —Å–ø–æ—Å–æ–± –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –≥–æ–¥–∞ üóì",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ì–æ–¥ –≤ –ø–æ–∏—Å–∫–µ",
                                                                                "https://telegra.ph/God-v-poiske-01-06"))
        elif call.message.caption == "–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ù–æ–≤—ã–π –≥–æ–¥ –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–ª–∏ —Ç–∞–∫, –∫–∞–∫ –º—ã –≤—Å–µ –ø—Ä–∏–≤—ã–∫–ª–∏ –≤–∏–¥–µ—Ç—å. –ù–æ —á—Ç–æ, –µ—Å–ª–∏ –º—ã —Å–∫–∞–∂–µ–º, —á—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—ã –ø—Ä–∞–∑–¥–Ω—É–µ—Ç–µ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ù–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å –æ —Ç–æ–º, –∫–∞–∫ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ –∑–∞–º–µ—â–∞–ª–∏ –ù–æ–≤—ã–º –≥–æ–¥–æ–º\n\n–° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –≤–∞—Å! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å, –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ 31 –¥–µ–∫–∞–±—Ä—è üòâ":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/christmas.jpg", "rb"),
                                                               caption="–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ù–æ–≤—ã–π –≥–æ–¥ –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–ª–∏ —Ç–∞–∫, –∫–∞–∫ –º—ã –≤—Å–µ –ø—Ä–∏–≤—ã–∫–ª–∏ –≤–∏–¥–µ—Ç—å. –ù–æ —á—Ç–æ, –µ—Å–ª–∏ –º—ã —Å–∫–∞–∂–µ–º, —á—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—ã –ø—Ä–∞–∑–¥–Ω—É–µ—Ç–µ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ù–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å –æ —Ç–æ–º, –∫–∞–∫ –†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ –∑–∞–º–µ—â–∞–ª–∏ –ù–æ–≤—ã–º –≥–æ–¥–æ–º\n\n–° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –≤–∞—Å! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å, –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ 31 –¥–µ–∫–∞–±—Ä—è üòâ",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ö–∞–∫ –æ—Ç–º–µ–Ω—è–ª–∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ",
                                                                                "https://telegra.ph/Skaz-o-tom-kak-Rozhdestvo-Novym-godom-zameshchali-01-07"))
        elif call.message.caption.split()[0] == "–ù–∞–¥–µ–µ–º—Å—è,":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/balls.jpg", "rb"),
                                                               caption="–ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤–∞—à–∞ –∫—Ä–∞—Å–∞–≤–∏—Ü–∞-—ë–ª–∫–∞ –≤—Å—ë –µ—â—ë —Å –≤–∞–º–∏ –∏ –≥—Ä–µ–µ—Ç —Å–µ—Ä–¥—Ü–µ –≤ –Ω–∞—á–∞–≤—à—É—é—Å—è —Ä–∞–±–æ—á—É—é –Ω–µ–¥–µ–ª—é! –°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–≤–µ–¥–∞–µ–º –æ —Ç–æ–º, –∫–∞–∫ –∏ –ø–æ—á–µ–º—É –Ω–∞ —ë–ª–∫—É —Å—Ç–∞–ª–∏ –≤–µ—à–∞—Ç—å —à–∞—Ä—ã üéÑ",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ö–∞–∫ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ —à–∞—Ä—ã",
                                                                                "https://telegra.ph/Istoriya-novogodnih-sharov-01-09"))

        elif call.message.caption.split()[0] == "–ù—É":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/new_old_year.jpg", "rb"),
                                                               caption="–ù—É —á—Ç–æ, —Å–æ –°—Ç–∞—Ä—ã–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º! –ö—Å—Ç–∞—Ç–∏, –∞ –≤—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ù–æ–≤—ã–π –≥–æ–¥ —Å—Ç–∞–ª ¬´—Å—Ç–∞—Ä—ã–º¬ª? –¢–æ–≥–¥–∞ —á–∏—Ç–∞–π—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ —ç—Ç—É —Ç–µ–º—É",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("–ö–∞–∫ –ø–æ—è–≤–∏–ª—Å—è –≤—Ç–æ—Ä–æ–π –ù–æ–≤—ã–π –≥–æ–¥?",
                                                                                "https://telegra.ph/Kak-poyavilsya-Staryj-Novyj-god-01-14"))
        elif "–£ –Ω–∞—Å –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å" in call.message.caption:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/character_quiz.jpg", "rb"),
                                                               caption="–£ –Ω–∞—Å –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å <b>—Å—é—Ä–ø—Ä–∏–∑</b>\n\n–•–æ—Ç—å –º—ã –∏ –æ–±–µ—â–∞–ª–∏, —á—Ç–æ —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –ø—Ä–æ–¥–ª–∏—Ç—Å—è –¥–æ 14 —è–Ω–≤–∞—Ä—è, –Ω–æ –º—ã –Ω–µ –º–æ–≥–ª–∏ –Ω–µ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å—é—Ä–ø—Ä–∏–∑ –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫! –í –±–æ—Ç–µ –ø–æ—è–≤–∏–ª—Å—è <b>–Ω–æ–≤—ã–π –∫–≤–∏–∑ ¬´–ö—Ç–æ —Ç—ã –∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤?¬ª</b>. –ê —Å–∞–º –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –µ—â—ë –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –º–æ–≥ –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è –∫ –Ω–µ–º—É!\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏ —ç—Ç–∏ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏. –ï—â–µ –Ω–µ –ø—Ä–æ—â–∞–µ–º—Å—è, –≤–ø–µ—Ä–µ–¥–∏ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –≤–º–µ—Å—Ç–µ —Å –°–æ–≤–µ—Ç–æ–º —é–Ω–∏–æ—Ä–æ–≤ –†–æ—Å–∞—Ç–æ–º–∞ ‚ù§Ô∏è\n\n<i><b>–¢–≤–æ–π –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –¥—Ä—É–≥</b></i>",
                                                               parse_mode="HTML"))
        elif call.message.caption == "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –ù–∞—Å—Ç–∞–ª–∞ –ø–æ—Ä–∞ –ø—Ä–æ—â–∞—Ç—å—Å—è)\n\n–û—Å—Ç–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤—ã—à–µ–¥—à–∏–µ —Ä–∞–Ω–µ–µ —Å—Ç–∞—Ç—å–∏ –∏–ª–∏ –ø—Ä–æ–π—Ç–∏ –∫–≤–∏–∑—ã, –µ—Å–ª–∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∏ —ç—Ç–æ –Ω–∞ –ø–æ—Ç–æ–º ‚ù§":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/attention.jpg", "rb"),
                                                               caption="–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –ù–∞—Å—Ç–∞–ª–∞ –ø–æ—Ä–∞ –ø—Ä–æ—â–∞—Ç—å—Å—è)\n\n–û—Å—Ç–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤—ã—à–µ–¥—à–∏–µ —Ä–∞–Ω–µ–µ —Å—Ç–∞—Ç—å–∏ –∏–ª–∏ –ø—Ä–æ–π—Ç–∏ –∫–≤–∏–∑—ã, –µ—Å–ª–∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∏ —ç—Ç–æ –Ω–∞ –ø–æ—Ç–æ–º ‚ù§",
                                                               parse_mode="HTML"))
        elif call.message.caption == "–ê –µ—â–µ —É –Ω–∞—Å –µ—Å—Ç—å –∫ –≤–∞–º –Ω–µ–±–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞)\n–ß—Ç–æ–±—ã –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±–æ—Ç —Å—Ç–∞–ª –µ—â—ë –∫—Ä—É—á–µ, –æ—Å—Ç–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –Ω–µ–±–æ–ª—å—à–æ–π —Ñ–æ—Ä–º–æ—á–∫–µ!\n–ù–∞–º –ø—Ä–∞–≤–¥–∞ –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ üéÖüèª‚ù§":
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/back_form.jpg", "rb"),
                                                               caption="–ê –µ—â–µ —É –Ω–∞—Å –µ—Å—Ç—å –∫ –≤–∞–º –Ω–µ–±–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞)\n–ß—Ç–æ–±—ã –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±–æ—Ç —Å—Ç–∞–ª –µ—â—ë –∫—Ä—É—á–µ, –æ—Å—Ç–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –Ω–µ–±–æ–ª—å—à–æ–π —Ñ–æ—Ä–º–æ—á–∫–µ!\n–ù–∞–º –ø—Ä–∞–≤–¥–∞ –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ üéÖüèª‚ù§",
                                                               parse_mode="HTML"),
                                   reply_markup=make_new_keyboard_for_sent_post("—Ç—ã–∫ –¥–ª—è —Ñ–æ—Ä–º–æ—á–∫–∏",
                                                                                "https://forms.yandex.ru/cloud/63d6475f43f74f9671216351/"))
        else:
            bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                   media=types.InputMediaPhoto(open("media/posts_pics/last_christmas_pic.jpg", "rb"),
                                                               caption=POST_MSG, parse_mode="HTML"))

        welcome(call.message, True, False)


def show_culture_posts(user):
    cur_post, num = user.get_cur_culture_post()
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    if cur_post.additional_btn is not None:
        if cur_post.url:
            callback_button_additional = types.InlineKeyboardButton(text=cur_post.additional_btn, url=cur_post.url)
        else:
            callback_button_additional = types.InlineKeyboardButton(text=cur_post.additional_btn,
                                                                    callback_data=cur_post.additional_btn)
        keyboard.add(callback_button_additional)
    if num == 0:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_CULT_BTN)
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_CULT_BTN)
        keyboard.add(callback_button_back, callback_button_next)
    if num == -1:
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_CULT_BTN)
        keyboard.add(callback_button_next)
    if num == 1:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_CULT_BTN)
        keyboard.add(callback_button_back)
    callback_button_back_to_menu = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(callback_button_back_to_menu)
    return cur_post.text, keyboard


def show_music_posts(message, user):
    cur_post, num = user.get_cur_music_post()

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    if num == 0:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_MUS_BTN)
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_MUS_BTN)
        keyboard.add(callback_button_back, callback_button_next)
    if num == -1:
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_MUS_BTN)
        keyboard.add(callback_button_next)
    if num == 1:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_MUS_BTN)
        keyboard.add(callback_button_back)

    callback_button_go_to_yandex = types.InlineKeyboardButton(text=YANDEX_LINK_TEXT, url=cur_post.yandex_link,
                                                              callback_data=LISTEN_ON_YANDEX_BTN)
    callback_button_back_to_menu = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(callback_button_go_to_yandex)
    keyboard.add(callback_button_back_to_menu)

    bot.send_video_note(message.chat.id, thumb=True, data=open(cur_post.video, "rb"))
    bot.send_message(message.chat.id, cur_post.description, reply_markup=keyboard)


def show_aes_posts(message, user):
    cur_post, num = user.get_cur_aes_post()

    keyboard = types.InlineKeyboardMarkup(row_width=2)
    if num == 0:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_AES_BTN)
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_AES_BTN)
        keyboard.add(callback_button_back, callback_button_next)
    if num == -1:
        callback_button_next = types.InlineKeyboardButton(text=NEXT_TEXT, callback_data=NEXT_AES_BTN)
        keyboard.add(callback_button_next)
    if num == 1:
        callback_button_back = types.InlineKeyboardButton(text=BACK_TEXT, callback_data=PREV_AES_BTN)
        keyboard.add(callback_button_back)

    callback_button_back_to_menu = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(callback_button_back_to_menu)

    bot.send_photo(message.chat.id, open(cur_post.picture, "rb"), caption=cur_post.caption, reply_markup=keyboard)


def checkUser(from_user: types.User, chat_id: int = 0):
    if int(chat_id) < 0:
        bot.send_message(chat_id, "–ü–æ–∫–∞ —á—Ç–æ —è –ø–ª–æ—Ö–æ —Ä–∞–±–æ—Ç–∞—é –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö(\n–ü–∏—à–∏—Ç–µ –º–Ω–µ –ª–∏—á–Ω–æ!")
        return False
    if from_user.id not in Constants.USER:
        user = User(from_user.id, from_user.first_name, from_user.last_name, from_user.username)
        Constants.USER[from_user.id] = user
    else:
        user = Constants.USER[from_user.id]
    return user


def sendDataToMe(user, new_user: bool):
    if new_user:
        add_user_data(user)
        bot.send_message(Constants.MY_ID, "new user:\n" + user.toString())
    else:
        bot.send_message(Constants.MY_ID, "action:\n" + user)


def edit_music_keyboard(link):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    callback_button_go_to_yandex = types.InlineKeyboardButton(text=YANDEX_LINK_TEXT, url=link,
                                                              callback_data=LISTEN_ON_YANDEX_BTN)
    keyboard.add(callback_button_go_to_yandex)
    return keyboard


def add_user_data(user: types.User):
    file = open("metadata/user_info.txt", "a")
    data = str(user.id) + "," + str(user.first_name) + "," + str(user.last_name) + "," + str(user.username) + "\n"
    file.write(data)
    file.close()


def upload_users():
    file = open("metadata/user_info.txt", "r")
    for line in file:
        user_data = line.split(',')
        user = User(int(user_data[0]), get_str_or_None(user_data[1]),
                    get_str_or_None(user_data[2]), get_str_or_None(user_data[3]))
        if user.id not in Constants.USER:
            Constants.USER[user.id] = user
    file.close()


def get_str_or_None(str: str):
    if str == "None":
        return None
    return str


def welcome_text_message(chat_id):
    bot.send_message(chat_id, Constants.START_MESSAGE, parse_mode='HTML')
    bot.send_photo(chat_id, photo=open("media/posts_pics/welcome_pic.jpeg", "rb"))


def make_new_keyboard_for_sent_post(button_text: str, link: str):
    keyboard = types.InlineKeyboardMarkup()
    callback_button_back_to_menu = types.InlineKeyboardButton(text=button_text, url=link)
    keyboard.add(callback_button_back_to_menu)
    return keyboard


def make_keyboard_for_quiz():
    keyboard = types.InlineKeyboardMarkup()
    first_quiz_btn = types.InlineKeyboardButton(text="–û–±–æ –≤—Å—ë–º –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º", callback_data=NEW_YEAR_Q_BTN)
    second_quiz_btn = types.InlineKeyboardButton(text="–ö—Ç–æ —Ç—ã –∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤",
                                                 callback_data=CHARACTER_QUIZ_NAME)
    callback_button_back_to_menu = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(first_quiz_btn)
    keyboard.add(second_quiz_btn)
    keyboard.add(callback_button_back_to_menu)
    return keyboard


def get_quiz_data(question_num: int, score: int):
    info_text = f"‚ùì –í–æ–ø—Ä–æ—Å {question_num} –∏–∑ {len(Constants.NEW_YEAR_Q_QUESTIONS)}\n‚úÖ –í–µ—Ä–Ω–æ {score} –∏–∑ {question_num - 1}\n\n"

    cur_question = NEW_YEAR_Q_QUESTIONS[question_num]
    keyboard = types.InlineKeyboardMarkup()
    if cur_question.answer_num == 0:
        first_btn = types.InlineKeyboardButton(text=cur_question.options[0],
                                               callback_data=cur_question.options_callbacks[0])
    else:
        first_btn = types.InlineKeyboardButton(text=cur_question.options[0],
                                               callback_data=cur_question.options_callbacks[1])
    if cur_question.answer_num == 1:
        second_btn = types.InlineKeyboardButton(text=cur_question.options[1],
                                                callback_data=cur_question.options_callbacks[0])
    else:
        second_btn = types.InlineKeyboardButton(text=cur_question.options[1],
                                                callback_data=cur_question.options_callbacks[1])
    if cur_question.answer_num == 2:
        third_btn = types.InlineKeyboardButton(text=cur_question.options[2],
                                               callback_data=cur_question.options_callbacks[0])
    else:
        third_btn = types.InlineKeyboardButton(text=cur_question.options[2],
                                               callback_data=cur_question.options_callbacks[1])
    if cur_question.answer_num == 3:
        fourth_btn = types.InlineKeyboardButton(text=cur_question.options[3],
                                                callback_data=cur_question.options_callbacks[0])
    else:
        fourth_btn = types.InlineKeyboardButton(text=cur_question.options[3],
                                                callback_data=cur_question.options_callbacks[1])
    back_to_main_menu_btn = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(first_btn)
    keyboard.add(second_btn)
    keyboard.add(third_btn)
    keyboard.add(fourth_btn)
    keyboard.add(back_to_main_menu_btn)
    return info_text + cur_question.question, keyboard


def keyboard_with_back_to_main_menu_btn():
    keyboard = types.InlineKeyboardMarkup()
    callback_button_back_to_menu = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT,
                                                              callback_data=BACK_TO_MENU_FROM_POST)
    keyboard.add(callback_button_back_to_menu)
    return keyboard


def get_new_year_quiz_result(score: int):
    return f"media/new_year_quiz_pics/{score}.png"


def edit_or_send_character_quiz_question(user: User, message: types.Message, question_num):
    if question_num == 19:
        end_character_quiz(user, message)
        return
    question = CHARACTER_QUIZ_QUESTIONS[question_num]
    keyboard = make_keyboard_for_character_quiz(question.options_list)
    if question_num == 1:
        msg_id = bot.send_photo(message.chat.id, photo=open("media/CharacterQuizPics/1.png", "rb"),
                                reply_markup=keyboard)
        return msg_id.message_id
    bot.edit_message_media(media=types.InputMediaPhoto(open(question.picture, "rb")),
                           chat_id=message.chat.id, message_id=message.message_id, reply_markup=keyboard)


def end_character_quiz(user: User, message: types.Message):
    cur_quiz = user.get_character_quiz(message)
    res = get_character_quiz_result(cur_quiz.score)
    picture = f"media/CharacterQuizPics/res-{res - 1}.png"
    bot.edit_message_media(media=types.InputMediaPhoto(open(picture, "rb"), caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –∫–≤–∏–∑ üéâ"),
                           chat_id=message.chat.id, message_id=message.message_id,
                           reply_markup=make_back_to_menu_btn_for_ending_character_quiz(res))


def get_character_quiz_result(score: list):
    max_score = -1
    res = -1
    for i in range(1, 7):
        cur_score = score.count(i)
        if cur_score > max_score:
            max_score = cur_score
            res = i
    return res


def make_keyboard_for_character_quiz(options: list):
    keyboard = types.InlineKeyboardMarkup()
    first_btn = types.InlineKeyboardButton(text="1", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[0] - 1])
    second_btn = types.InlineKeyboardButton(text="2", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[1] - 1])
    third_btn = types.InlineKeyboardButton(text="3", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[2] - 1])
    fourth_btn = types.InlineKeyboardButton(text="4", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[3] - 1])
    fifth_btn = types.InlineKeyboardButton(text="5", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[4] - 1])
    sixth_btn = types.InlineKeyboardButton(text="6", callback_data=CHARACTER_QUIZ_QUESTION_CALLBACKS[options[5] - 1])
    keyboard.add(first_btn, second_btn)
    keyboard.add(third_btn, fourth_btn)
    keyboard.add(fifth_btn, sixth_btn)
    return keyboard


def make_keyboard_for_starting_character_quiz():
    keyboard = types.InlineKeyboardMarkup()
    first_btn = types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∫–≤–∏–∑", callback_data=START_CHARACTER_QUIZ)
    second_btn = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=MAIN_MENU_BTN)
    keyboard.add(first_btn)
    keyboard.add(second_btn)
    return keyboard


def make_back_to_menu_btn_for_ending_character_quiz(res: int):
    character_callback = CHARACTERS_LIST[res - 1]
    keyboard = make_keyboard_for_ending_character_quiz(REVERSER_CHARACTER_LIST[character_callback][1],
                                                       REVERSER_CHARACTER_LIST[character_callback][2])
    first_btn = types.InlineKeyboardButton(text=BACK_TO_MENU_TEXT, callback_data=character_callback)
    keyboard.add(first_btn)
    return keyboard


def make_keyboard_for_ending_character_quiz(btn_name: str, link: str):
    keyboard = types.InlineKeyboardMarkup()
    first_btn = types.InlineKeyboardButton(text=btn_name, url=link)
    keyboard.add(first_btn)
    return keyboard


if __name__ == '__main__':
    upload_users()
    bot.polling(none_stop=True)
